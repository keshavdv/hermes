/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.3 at Thu Sep 17 22:01:56 2015. */

#ifndef PB_MESSAGES_PB_H_INCLUDED
#define PB_MESSAGES_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Sensor_SensorType {
    Sensor_SensorType_ANALOG = 0,
    Sensor_SensorType_DIGITAL = 1,
    Sensor_SensorType_DIFFERENTIAL = 2,
    Sensor_SensorType_STRAIN = 3,
    Sensor_SensorType_TEMPERATURE = 4
} Sensor_SensorType;

typedef enum _DeviceControl_Action {
    DeviceControl_Action_START = 0,
    DeviceControl_Action_STOP = 1,
    DeviceControl_Action_RESET = 2,
    DeviceControl_Action_SET_CONFIG = 3,
    DeviceControl_Action_GET_CONFIG = 4
} DeviceControl_Action;

/* Struct definitions */
typedef struct _DeviceConfiguration {
    pb_callback_t sensors;
} DeviceConfiguration;

typedef struct _DeviceInfo {
    pb_callback_t model;
    pb_callback_t sensors;
} DeviceInfo;

typedef struct _Sensor {
    int32_t id;
    Sensor_SensorType type;
    pb_callback_t name;
} Sensor;

typedef struct _SensorConfiguration {
    int32_t id;
    bool enabled;
    int32_t frequency;
} SensorConfiguration;

typedef struct _SensorMessage {
    uint32_t id;
    uint32_t value;
} SensorMessage;

typedef struct _SensorUpdate {
    uint32_t timestamp;
    pb_callback_t messages;
} SensorUpdate;

typedef struct _DeviceControl {
    DeviceControl_Action action;
    bool has_config;
    SensorConfiguration config;
} DeviceControl;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Sensor_init_default                      {0, (Sensor_SensorType)0, {{NULL}, NULL}}
#define DeviceInfo_init_default                  {{{NULL}, NULL}, {{NULL}, NULL}}
#define SensorConfiguration_init_default         {0, 0, 0}
#define DeviceConfiguration_init_default         {{{NULL}, NULL}}
#define DeviceControl_init_default               {(DeviceControl_Action)0, false, SensorConfiguration_init_default}
#define SensorMessage_init_default               {0, 0}
#define SensorUpdate_init_default                {0, {{NULL}, NULL}}
#define Sensor_init_zero                         {0, (Sensor_SensorType)0, {{NULL}, NULL}}
#define DeviceInfo_init_zero                     {{{NULL}, NULL}, {{NULL}, NULL}}
#define SensorConfiguration_init_zero            {0, 0, 0}
#define DeviceConfiguration_init_zero            {{{NULL}, NULL}}
#define DeviceControl_init_zero                  {(DeviceControl_Action)0, false, SensorConfiguration_init_zero}
#define SensorMessage_init_zero                  {0, 0}
#define SensorUpdate_init_zero                   {0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define DeviceConfiguration_sensors_tag          2
#define DeviceInfo_model_tag                     1
#define DeviceInfo_sensors_tag                   2
#define Sensor_id_tag                            1
#define Sensor_type_tag                          2
#define Sensor_name_tag                          3
#define SensorConfiguration_id_tag               1
#define SensorConfiguration_enabled_tag          2
#define SensorConfiguration_frequency_tag        3
#define SensorMessage_id_tag                     1
#define SensorMessage_value_tag                  2
#define SensorUpdate_timestamp_tag               1
#define SensorUpdate_messages_tag                2
#define DeviceControl_action_tag                 1
#define DeviceControl_config_tag                 2

/* Struct field encoding specification for nanopb */
extern const pb_field_t Sensor_fields[4];
extern const pb_field_t DeviceInfo_fields[3];
extern const pb_field_t SensorConfiguration_fields[4];
extern const pb_field_t DeviceConfiguration_fields[2];
extern const pb_field_t DeviceControl_fields[3];
extern const pb_field_t SensorMessage_fields[3];
extern const pb_field_t SensorUpdate_fields[3];

/* Maximum encoded size of messages (where known) */
#define SensorConfiguration_size                 24
#define DeviceControl_size                       32
#define SensorMessage_size                       12

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGES_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
