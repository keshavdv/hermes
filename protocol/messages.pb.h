/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.3 at Sat Apr  9 21:50:09 2016. */

#ifndef PB_MESSAGES_PB_H_INCLUDED
#define PB_MESSAGES_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Payload_MsgType {
    Payload_MsgType_DeviceInfo = 0,
    Payload_MsgType_DeviceControlRequest = 1,
    Payload_MsgType_DeviceControlResponse = 2,
    Payload_MsgType_SensorState = 3
} Payload_MsgType;

typedef enum _Sensor_SensorType {
    Sensor_SensorType_ANALOG = 0,
    Sensor_SensorType_DIGITAL = 1,
    Sensor_SensorType_DIFFERENTIAL = 2,
    Sensor_SensorType_STRAIN = 3,
    Sensor_SensorType_TEMPERATURE = 4
} Sensor_SensorType;

typedef enum _DeviceControlRequest_Action {
    DeviceControlRequest_Action_START = 0,
    DeviceControlRequest_Action_STOP = 1,
    DeviceControlRequest_Action_RESET = 2,
    DeviceControlRequest_Action_SET_CONFIG = 3,
    DeviceControlRequest_Action_GET_CONFIG = 4
} DeviceControlRequest_Action;

typedef enum _DeviceControlResponse_Status {
    DeviceControlResponse_Status_OK = 0,
    DeviceControlResponse_Status_ERROR = 1
} DeviceControlResponse_Status;

/* Struct definitions */
typedef struct _DeviceConfiguration {
    pb_callback_t configuration;
} DeviceConfiguration;

typedef struct _DeviceProfile {
    pb_callback_t model;
    pb_callback_t sensors;
} DeviceProfile;

typedef struct _DeviceControlRequest {
    int32_t id;
    DeviceControlRequest_Action action;
    bool has_config;
    DeviceConfiguration config;
} DeviceControlRequest;

typedef struct _DeviceControlResponse {
    int32_t requestId;
    DeviceControlResponse_Status status;
    bool has_config;
    DeviceConfiguration config;
} DeviceControlResponse;

typedef struct _Sensor {
    int32_t id;
    Sensor_SensorType type;
    pb_callback_t name;
} Sensor;

typedef struct _SensorConfiguration {
    int32_t id;
    bool enabled;
    int32_t frequency;
} SensorConfiguration;

typedef struct _SensorState {
    uint32_t timestamp;
    pb_callback_t messages;
} SensorState;

typedef struct _SensorValue {
    uint32_t id;
    uint32_t value;
} SensorValue;

typedef struct _Payload {
    Payload_MsgType type;
    bool has_profile;
    DeviceProfile profile;
    bool has_request;
    DeviceControlRequest request;
    bool has_response;
    DeviceControlResponse response;
    bool has_state;
    SensorState state;
} Payload;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Payload_init_default                     {(Payload_MsgType)0, false, DeviceProfile_init_default, false, DeviceControlRequest_init_default, false, DeviceControlResponse_init_default, false, SensorState_init_default}
#define Sensor_init_default                      {0, (Sensor_SensorType)0, {{NULL}, NULL}}
#define DeviceProfile_init_default               {{{NULL}, NULL}, {{NULL}, NULL}}
#define SensorConfiguration_init_default         {0, 0, 0}
#define DeviceConfiguration_init_default         {{{NULL}, NULL}}
#define DeviceControlRequest_init_default        {0, (DeviceControlRequest_Action)0, false, DeviceConfiguration_init_default}
#define DeviceControlResponse_init_default       {0, (DeviceControlResponse_Status)0, false, DeviceConfiguration_init_default}
#define SensorValue_init_default                 {0, 0}
#define SensorState_init_default                 {0, {{NULL}, NULL}}
#define Payload_init_zero                        {(Payload_MsgType)0, false, DeviceProfile_init_zero, false, DeviceControlRequest_init_zero, false, DeviceControlResponse_init_zero, false, SensorState_init_zero}
#define Sensor_init_zero                         {0, (Sensor_SensorType)0, {{NULL}, NULL}}
#define DeviceProfile_init_zero                  {{{NULL}, NULL}, {{NULL}, NULL}}
#define SensorConfiguration_init_zero            {0, 0, 0}
#define DeviceConfiguration_init_zero            {{{NULL}, NULL}}
#define DeviceControlRequest_init_zero           {0, (DeviceControlRequest_Action)0, false, DeviceConfiguration_init_zero}
#define DeviceControlResponse_init_zero          {0, (DeviceControlResponse_Status)0, false, DeviceConfiguration_init_zero}
#define SensorValue_init_zero                    {0, 0}
#define SensorState_init_zero                    {0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define DeviceConfiguration_configuration_tag    1
#define DeviceProfile_model_tag                  1
#define DeviceProfile_sensors_tag                2
#define DeviceControlRequest_id_tag              1
#define DeviceControlRequest_action_tag          2
#define DeviceControlRequest_config_tag          3
#define DeviceControlResponse_requestId_tag      1
#define DeviceControlResponse_status_tag         2
#define DeviceControlResponse_config_tag         3
#define Sensor_id_tag                            1
#define Sensor_type_tag                          2
#define Sensor_name_tag                          3
#define SensorConfiguration_id_tag               1
#define SensorConfiguration_enabled_tag          2
#define SensorConfiguration_frequency_tag        3
#define SensorState_timestamp_tag                1
#define SensorState_messages_tag                 2
#define SensorValue_id_tag                       1
#define SensorValue_value_tag                    2
#define Payload_type_tag                         1
#define Payload_profile_tag                      2
#define Payload_request_tag                      3
#define Payload_response_tag                     4
#define Payload_state_tag                        5

/* Struct field encoding specification for nanopb */
extern const pb_field_t Payload_fields[6];
extern const pb_field_t Sensor_fields[4];
extern const pb_field_t DeviceProfile_fields[3];
extern const pb_field_t SensorConfiguration_fields[4];
extern const pb_field_t DeviceConfiguration_fields[2];
extern const pb_field_t DeviceControlRequest_fields[4];
extern const pb_field_t DeviceControlResponse_fields[4];
extern const pb_field_t SensorValue_fields[3];
extern const pb_field_t SensorState_fields[3];

/* Maximum encoded size of messages (where known) */
#define SensorConfiguration_size                 24
#define SensorValue_size                         12

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define MESSAGES_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
